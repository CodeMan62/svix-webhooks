/*
Svix API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DataAnyOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataAnyOf{}

// DataAnyOf struct for DataAnyOf
type DataAnyOf struct {
	MessagesSent int32 `json:"messages_sent"`
}

type _DataAnyOf DataAnyOf

// NewDataAnyOf instantiates a new DataAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataAnyOf(messagesSent int32) *DataAnyOf {
	this := DataAnyOf{}
	this.MessagesSent = messagesSent
	return &this
}

// NewDataAnyOfWithDefaults instantiates a new DataAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataAnyOfWithDefaults() *DataAnyOf {
	this := DataAnyOf{}
	return &this
}

// GetMessagesSent returns the MessagesSent field value
func (o *DataAnyOf) GetMessagesSent() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MessagesSent
}

// GetMessagesSentOk returns a tuple with the MessagesSent field value
// and a boolean to check if the value has been set.
func (o *DataAnyOf) GetMessagesSentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesSent, true
}

// SetMessagesSent sets field value
func (o *DataAnyOf) SetMessagesSent(v int32) {
	o.MessagesSent = v
}

func (o DataAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataAnyOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["messages_sent"] = o.MessagesSent
	return toSerialize, nil
}

func (o *DataAnyOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"messages_sent",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDataAnyOf := _DataAnyOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDataAnyOf)

	if err != nil {
		return err
	}

	*o = DataAnyOf(varDataAnyOf)

	return err
}

type NullableDataAnyOf struct {
	value *DataAnyOf
	isSet bool
}

func (v NullableDataAnyOf) Get() *DataAnyOf {
	return v.value
}

func (v *NullableDataAnyOf) Set(val *DataAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDataAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDataAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataAnyOf(val *DataAnyOf) *NullableDataAnyOf {
	return &NullableDataAnyOf{value: val, isSet: true}
}

func (v NullableDataAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


